"""
Django settings for fashion project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-a@+x#=ev95s)^g3-=v_if^b#(!%h@^4sefx^ydq@o6k+$3yj^4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin', 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myapp',
    'widget_tweaks',
    'django_countries',
    
]

JAZZMIN_SETTINGS = {
    "site_title": "My Admin Dashboard",
    "site_header": "My Admin Dashboard",
    "welcome_sign": "Welcome to your Estore Dashboard",
    "copyright": "Â© 2025 Estore",
    "topmenu_links": [
        {"name": "Home", "url": "/", "permissions": ["auth.view_user"]},
        {"model": "auth.user"},
    ],
    "show_ui_builder": True,
    # Add any additional Jazzmin settings you need
    "custom_css": "css/my_custom_admin.css", 
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'ogudavictor492@gmail.com'
EMAIL_HOST_PASSWORD = 'kflt pyji lxik tyov'  # Your provided app password
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = 'ogudavictor492@gmail.com'



ROOT_URLCONF = 'fashion.urls'
AUTH_USER_MODEL = 'myapp.CustomUser'
import os
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Using app templates folder
        'DIRS': [ os.path.join(BASE_DIR, 'myapp', 'templates') ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                 'myapp.context_processors.cart_item_count',
            ],
        },
    },
]
WSGI_APPLICATION = 'fashion.wsgi.application'

AUTH_USER_MODEL = 'myapp.CustomUser'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Redirect URLs after login/logout
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Security settings (review these in production)
CSRF_COOKIE_SECURE = False  # Set to True when using HTTPS in production
SESSION_COOKIE_SECURE = False  # Set to True when using HTTPS in production
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Flutterwave API Keys (Store securely in environment variables)
FLUTTERWAVE_SECRET_KEY = "FLWSECK_TEST-d34828dfc71e4f7a9b233a498ca8a577-X"
FLUTTERWAVE_PUBLIC_KEY = "FLWPUBK_TEST-10ff25aa85156ccae955afbb08b5296e-X"
FLUTTERWAVE_REDIRECT_URL = "http://127.0.0.1:8000/flutterwave/callback/"
STORE_LOGO_URL = "https://example.com/logo.png"  # Change to your actual store logo
#ngrok to add https for security to test payment gateway
ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    '.ngrok-free.app',  # allow any subdomain ending with ngrok-free.app
]


#to ensure django trust #ngrok the x-forwarded-host header (csrf)
CSRF_TRUSTED_ORIGINS = [
    'https://*.ngrok-free.app',
]
